topology_template:
   node_templates:    

    Provider_Outside_port:
      type: aria.openstack.nodes.Port
      properties:
        use_external_resource: true
        create_if_missing: true
        resource_id: provider_outside_port
        fixed_ip: { get_input: provider_outside_ip }
        openstack_config: { get_input: openstack_config }
      requirements:
      #  - security_group: allowall
        - subnet: Outside_subnet
        - network: Outside

    Provider_Extnet_port:
      type: aria.openstack.nodes.Port
      properties:
        use_external_resource: true
        create_if_missing: true
        resource_id: provider_extnet_port
        fixed_ip: { get_input: provider_extnet_ip }
        openstack_config: { get_input: openstack_config }
      requirements:
      #  - security_group: allowall
        - subnet: Extnet_subnet
        - network: Extnet

    Provider_Simint1_port:
      type: aria.openstack.nodes.Port
      properties:
        use_external_resource: true
        create_if_missing: true
        resource_id: provider_simint1_port
        fixed_ip: { get_input: provider_simint1_ip }
        openstack_config: { get_input: openstack_config }
      requirements:
      #  - security_group: allowall
        - subnet: Simint1_subnet
        - network: Simint1

    Provider:
      type: aria.openstack.nodes.Server
      properties:
        image: { get_input: vyos-image }
        flavor: ds1G
        use_external_resource: true
        create_if_missing: true
        resource_id: provider
        management_network_name: { get_input: management_network }
        openstack_config: { get_input: openstack_config }
        server:
          userdata: { get_input: vyos118_init }     
      requirements:
        - key_pair: keypair
        - port: Provider_Extnet_port
        - port: Provider_Outside_port
        - port: Provider_Simint1_port

    Provider_Firewall:
      type: sdl.nodes.Firewall.VyOS
      requirements:
       - host: Provider
       - defaultgw: Provider_Extnet_port

    Provider_InitPermissive:
      type: sdl.nodes.Configuration.Firewall.Init.Permissive.VyOS
      properties:
        # routes: 
        #  - destination: 198.51.100.0/24 # { get_property: [ DMZ_subnet, subnet, cidr ] } # ARIA Bug!
        #    address: 203.0.113.2 # { get_property: [ FW_Outside_port, fixed_ip ] }
        masquerade_addresses:
         - { get_property: [ Provider_Extnet_port, fixed_ip ] }
      requirements:
        - firewall: Provider_Firewall

    Provider_Route1:
      type: sdl.nodes.Configuration.Route.Firewall.VyOS
      properties:
        destination: 198.51.100.0/24 # { get_property: [ DMZ_subnet, subnet, cidr ] } # ARIA Bug!
        address: 203.0.113.2 # { get_property: [ FW_Outside_port, fixed_ip ] }
      requirements:
        - destination_network: DMZ_subnet
        - firewall: Provider_Firewall
        - gateway: Firewall_UFW
        # avoid configuration lock problem!
        - dependency: Provider_InitPermissive